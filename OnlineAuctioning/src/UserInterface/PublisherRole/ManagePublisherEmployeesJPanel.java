/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PublisherRole;

import UserInterface.AdvertiserRole.*;
import Business.Advertiser.Organizations.AdCreatorOrganization;
import Business.Employee.Employee;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonam
 */

public class ManagePublisherEmployeesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSalesRepresentativesJPanel
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    public ManagePublisherEmployeesJPanel(JPanel userProcessContainer,OrganizationDirectory organizationDirectory) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.organizationDirectory= organizationDirectory;
        populateOrganizations();
    }
    
    private void populateOrganizations()
    {
        organizationJComboBox.removeAllItems();
        for(Organization o:organizationDirectory.getOrganizationList())
        {   
            organizationJComboBox.addItem(o);
        }
    }
    
    private void populateEmployeeTable(Organization org)
    {
        DefaultTableModel dtm= (DefaultTableModel) employeeJTable.getModel();
        dtm.setRowCount(0);
        for(Person person:org.getPersonDirectory().getPersonDirectory())
        {
            Object row[]= new Object[2];
            row[0]=((Employee)person).getId();
            row[1]=(Employee)person;
            dtm.addRow(row);
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        removeRepresentativeJButton = new javax.swing.JButton();
        addEmployeeJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Publisher Employee");

        jLabel2.setText("Organization:");

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        employeeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Employee ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeeJTable);
        if (employeeJTable.getColumnModel().getColumnCount() > 0) {
            employeeJTable.getColumnModel().getColumn(0).setResizable(false);
        }

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        removeRepresentativeJButton.setText("Remove");
        removeRepresentativeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRepresentativeJButtonActionPerformed(evt);
            }
        });

        addEmployeeJButton.setText("Add Employee");
        addEmployeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(30, 30, 30)
                            .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backJButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(removeRepresentativeJButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(addEmployeeJButton))
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(refreshJButton))
                .addContainerGap(304, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshJButton)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(removeRepresentativeJButton)
                        .addComponent(addEmployeeJButton))
                    .addComponent(backJButton))
                .addContainerGap(308, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
        Organization org= (Organization) organizationJComboBox.getSelectedItem();
        if(org!=null)
        {
            populateEmployeeTable(org);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeRepresentativeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRepresentativeJButtonActionPerformed
        // TODO add your handling code here:
        Organization org= (Organization) organizationJComboBox.getSelectedItem();
        if(org==null)
        {
            JOptionPane.showMessageDialog(this,"Please select an Organization.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedRow= employeeJTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(this,"Please select an Employee.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        Employee employee=(Employee) employeeJTable.getValueAt(selectedRow, 1);

        int flag= JOptionPane.showConfirmDialog(this, "Removing Employee will delete the user account if present.Are you sure want to remove this Employee?","Warning", JOptionPane.YES_NO_OPTION);
        if(flag==0)
        {
            UserAccountDirectory userAccountDirectory=org.getUserAccountDirectory();
            for (UserAccount ua : userAccountDirectory.getUserAccountList()) {
                if (ua.getPerson().getPersonID()==employee.getPersonID()) {
                    userAccountDirectory.removeUserAccount(ua);
                    break;
                }
            }
            System.out.println("User account removed");
            org.getPersonDirectory().removePerson(employee);
            System.out.println("Employee removed");
            populateEmployeeTable(org);
        }
    }//GEN-LAST:event_removeRepresentativeJButtonActionPerformed

    private void addEmployeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeJButtonActionPerformed
        // TODO add your handling code here:
        AddPublisherEmployeeJPanel aaejp = new AddPublisherEmployeeJPanel(userProcessContainer, organizationDirectory);
        userProcessContainer.add("AddAdvertiserEmployeeJPanel", aaejp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addEmployeeJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        Organization org= (Organization) organizationJComboBox.getSelectedItem();
        if(org==null)
        {
            JOptionPane.showMessageDialog(this,"Please select an Organization.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        populateEmployeeTable(org);
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmployeeJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable employeeJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton removeRepresentativeJButton;
    // End of variables declaration//GEN-END:variables
}
