/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PublisherRole;

import Business.Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Person.Person;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.Utils.MyPasswordVerifier;
import Business.Utils.MyStringVerifier;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Sonam
 */
public class AddPublisherUserAccountsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddUserAccountJPanel
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    private EcoSystem ecoSystem;
    public AddPublisherUserAccountsJPanel(JPanel userProcessContainer,OrganizationDirectory organizationDirectory,EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.ecoSystem=ecoSystem;
        setVerifiers();
        populateOrganizations();
    }
    
    private void setVerifiers()
    {
        MyStringVerifier myStringVerifier= new MyStringVerifier();
        userNameJTextField.setInputVerifier(myStringVerifier);
        MyPasswordVerifier myPasswordVerifier= new MyPasswordVerifier();
        passwordJTextField.setInputVerifier(myPasswordVerifier);
    }
    
    private void populateOrganizations()
    {
        organizationsJComboBox.removeAllItems();
        //Populate Organizations
        for(Organization o:organizationDirectory.getOrganizationList())
        {
            organizationsJComboBox.addItem(o);
        }
    }

    private void populatePerson(Organization org) {
        personJComboBox.removeAllItems();
              
        for(Person p: org.getPersonDirectory().getPersonDirectory())
        {
            boolean isUserPresent=false;
            for(UserAccount ua: org.getUserAccountDirectory().getUserAccountList())
            {
                if(p.getPersonID()==ua.getPerson().getPersonID())
                {
                    isUserPresent = true;
                    break;
                }
            }
            if (isUserPresent == false)
            {
                personJComboBox.addItem(p);
            }
        }
    }
    
    private void populateRole(Organization org)
    {
        roleJComboBox.removeAllItems();   
        for(Role role: org.getSupportedRole())
        {
            roleJComboBox.addItem(role);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        userNameJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        isActiveJRadioButton = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        personJComboBox = new javax.swing.JComboBox();
        addUserAccountJButton = new javax.swing.JButton();
        passwordJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        organizationsJComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();

        jLabel1.setText("User Name");

        jLabel2.setText("Password");

        buttonGroup1.add(isActiveJRadioButton);
        isActiveJRadioButton.setSelected(true);
        isActiveJRadioButton.setText("Is Active");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Disabled");

        jLabel3.setText("Person:");

        addUserAccountJButton.setText("Add User Account");
        addUserAccountJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserAccountJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Organization:");

        organizationsJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationsJComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Add Publisher User Account");

        jLabel4.setText("Role:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userNameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(passwordJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isActiveJRadioButton)
                            .addComponent(backJButton))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addUserAccountJButton)
                            .addComponent(jRadioButton2)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(36, 36, 36)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(organizationsJComboBox, 0, 150, Short.MAX_VALUE)
                                .addComponent(personJComboBox, 0, 150, Short.MAX_VALUE)
                                .addComponent(roleJComboBox, 0, 150, Short.MAX_VALUE)))))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(organizationsJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(personJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton2)
                    .addComponent(isActiveJRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton)
                    .addComponent(addUserAccountJButton))
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addUserAccountJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserAccountJButtonActionPerformed
        // TODO add your handling code here:
        Organization org=(Organization) organizationsJComboBox.getSelectedItem();
        if(org==null)
        {
            JOptionPane.showMessageDialog(this, "Please select an organization.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Person person= (Person) personJComboBox.getSelectedItem();
        if(person==null)
        {
            JOptionPane.showMessageDialog(this, "Please select a person.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Role role= (Role) roleJComboBox.getSelectedItem();
        if(role==null)
        {
            JOptionPane.showMessageDialog(this, "Please select a role.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(userNameJTextField.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Please enter User Name.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(passwordJTextField.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Please enter password.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //Check if user already present in whole system.
        System.out.println("Scanning system user accounts for duplicate User Name");
        Boolean flag=true;
        if(ecoSystem.checkIfUserNameisUnique(userNameJTextField.getText()))
        {
            for(Network n: ecoSystem.getNetworkList())
            {
                for(Enterprise e:n.getEnterpriseDirectory().getEnterpriseList())
                {
                    if(e.getUserAccountDirectory().checkIfUserNameUnique(userNameJTextField.getText()))
                    {
                        for(Organization o:e.getOrganizationDirectory().getOrganizationList())
                        {
                            if(o.getUserAccountDirectory().checkIfUserNameUnique(userNameJTextField.getText()))
                            {
                                flag=true;
                            }
                            else
                            {
                                flag=false;
                                break;
                            }
                        }
                        
                    }
                    else
                    {
                        flag=false;
                        break;
                    }
                }
            }
        }
        else
        {
            flag= false;
        }
        
        if(flag==false)
        {
            System.out.println("Duplicate User found.");
            JOptionPane.showMessageDialog(this,"Username already exists, please enter another name.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        UserAccount ua = org.getUserAccountDirectory().createUserAccount(userNameJTextField.getText(),passwordJTextField.getText(),(Employee)person,role);            
        if (isActiveJRadioButton.isSelected()) {
            ua.setIsActive("Yes");
        } else {
            ua.setIsActive("No");
        }
        System.out.println("User account created");
        JOptionPane.showMessageDialog(this, "User account created", "Update", JOptionPane.INFORMATION_MESSAGE);
        userNameJTextField.setText("");
        passwordJTextField.setText("");
        populatePerson(org);
        populateRole(org);
        
    }//GEN-LAST:event_addUserAccountJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ((CardLayout) userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationsJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationsJComboBoxActionPerformed
        // TODO add your handling code here:
        userNameJTextField.setText("");
        passwordJTextField.setText("");
        Organization org= (Organization) organizationsJComboBox.getSelectedItem();
        
        if(org!=null)
        {
            populatePerson(org);
            populateRole(org);
        }
        
    }//GEN-LAST:event_organizationsJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserAccountJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton isActiveJRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JComboBox organizationsJComboBox;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JComboBox personJComboBox;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables
}
