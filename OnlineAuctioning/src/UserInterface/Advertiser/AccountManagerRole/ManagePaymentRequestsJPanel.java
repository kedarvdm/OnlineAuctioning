/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Advertiser.AccountManagerRole;

import Business.Enterprise.AdvertiserEnterprise;
import Business.Organization.Organization;
import Business.Publisher.WorkRequests.RequestPaymentWorkRequest;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonam
 */
public class ManagePaymentRequestsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private AdvertiserEnterprise adEnterprise;
    private Organization organization;
    private UserAccount userAccount;
    public ManagePaymentRequestsJPanel(JPanel userProcessContainer,AdvertiserEnterprise adEnterprise,Organization organization,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.adEnterprise=adEnterprise;
        this.organization=organization;
        this.userAccount=userAccount;
        populateOrgRequestsTable();
        populateMyRequestsTable();
    }
    
    private void populateOrgRequestsTable()
    {
        DefaultTableModel dtm= (DefaultTableModel) orgPaymentRequestsJTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()) {
            if (r instanceof RequestPaymentWorkRequest) {
                RequestPaymentWorkRequest request=(RequestPaymentWorkRequest)r;
                
                Object row[] = new Object[9];
                row[0] = request;
                row[1] = request.getAdSpace().getTitle();
                row[2] = request.getAdName();
                row[3] = request.getAmount();
                row[4] = request.getSender();
                row[5] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
                row[6] = request.getStatus();
                row[7] = request.getRequestDate();
                row[8] = request.getResolveDate();
                dtm.addRow(row);
            }
        }
    }
    
    private void populateMyRequestsTable()
    {
        DefaultTableModel dtm= (DefaultTableModel) myPaymentRequestsJTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()) {
            if (r instanceof RequestPaymentWorkRequest && r.getReceiver()==userAccount) {
                RequestPaymentWorkRequest request=(RequestPaymentWorkRequest)r;
                
                Object row[] = new Object[9];
                row[0] = request;
                row[1] = request.getAdSpace().getTitle();
                row[2] = request.getAdName();
                row[3] = request.getAmount();
                row[4] = request.getSender();
                row[5] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
                row[6] = request.getStatus();
                row[7] = request.getRequestDate();
                row[8] = request.getResolveDate();
                dtm.addRow(row);
            }
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orgPaymentRequestsJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        myPaymentRequestsJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        assignToMeJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        makePaymentJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("My Payment Requests:");

        orgPaymentRequestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Ad Space", "Advertisement", "Amount", "Sender", "Receiver", "Status", "Request Date", "Resolve Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orgPaymentRequestsJTable);

        myPaymentRequestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Ad Space", "Advertisement", "Amount", "Sender", "Receiver", "Status", "Request Date", "Resolve Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(myPaymentRequestsJTable);

        jLabel2.setText("My Work Requests:");

        assignToMeJButton.setText("Assign To Me");
        assignToMeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        makePaymentJButton.setText("Make Payment");
        makePaymentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentJButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manage Payment Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(assignToMeJButton))
                    .addComponent(makePaymentJButton)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(320, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignToMeJButton)
                    .addComponent(backJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(makePaymentJButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignToMeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orgPaymentRequestsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Work Request.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        RequestPaymentWorkRequest myWorkRequest = (RequestPaymentWorkRequest) orgPaymentRequestsJTable.getValueAt(selectedRow, 0);
        if(myWorkRequest.getReceiver()!=null)
        {
            JOptionPane.showMessageDialog(this, "Request is already assigned to "+myWorkRequest.getReceiver().getPerson().getName(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        myWorkRequest.setReceiver(userAccount);
        myWorkRequest.setStatus("Under Review");
        myWorkRequest.setResolveDate(new Date());
        System.out.println("Request assigned to "+userAccount.getUsername());
        populateOrgRequestsTable();
        populateMyRequestsTable();
    }//GEN-LAST:event_assignToMeJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ((CardLayout) userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void makePaymentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = myPaymentRequestsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Work Request.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        RequestPaymentWorkRequest myWorkRequest = (RequestPaymentWorkRequest) myPaymentRequestsJTable.getValueAt(selectedRow, 0);
        if(myWorkRequest.isPaid())
        {
            JOptionPane.showMessageDialog(this, "Amount already paid!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        myWorkRequest.setReceiver(userAccount);
        myWorkRequest.setStatus("Completed");
        myWorkRequest.setPaid(true);
        JOptionPane.showMessageDialog(this, "Payment done!", "Update", JOptionPane.INFORMATION_MESSAGE);
        System.out.println("Payment request status changed to Completed");
        myWorkRequest.setResolveDate(new Date());
        populateOrgRequestsTable();
        populateMyRequestsTable();
    }//GEN-LAST:event_makePaymentJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMeJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton makePaymentJButton;
    private javax.swing.JTable myPaymentRequestsJTable;
    private javax.swing.JTable orgPaymentRequestsJTable;
    // End of variables declaration//GEN-END:variables

}
