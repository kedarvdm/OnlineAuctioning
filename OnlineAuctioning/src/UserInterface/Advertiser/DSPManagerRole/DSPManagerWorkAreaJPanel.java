/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Advertiser.DSPManagerRole;

import Business.Advertiser.Advertisement.Advertisement;

import Business.Advertiser.DemandSidePlatform.DSP;
import Business.Enterprise.AdvertiserEnterprise;
import Business.Enterprise.Enterprise;
import UserInterface.Advertiser.AdInventoryManagerRole.ViewEditAdDetailsJPanel;
import UserInterface.Advertiser.AdInventoryManagerRole.ViewAdvertisementJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonam
 */
public class DSPManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DSPManagerJPanel
     */
    private JPanel userProcessContainer;
    private AdvertiserEnterprise adEnterprise;

    public DSPManagerWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.adEnterprise = (AdvertiserEnterprise) enterprise;
        populateAdInventory();
        populateDSPs(null);
    }

    private void populateAdInventory() {
        DefaultTableModel dtm = (DefaultTableModel) adInventoryJTable.getModel();
        dtm.setRowCount(0);

        for (Advertisement advertisement : adEnterprise.getAdInventory().getAdvertimentsList()) {
            if (advertisement.isReady()) {
                Object row[] = new Object[4];

                row[0] = advertisement.getAdvertisementID();
                row[1] = advertisement;
                row[2] = advertisement.getDateCreated();
                row[3] = advertisement.isEnabled() == Boolean.TRUE ? "Yes" : "No";

                dtm.addRow(row);
            }
        }
    }

    private void populateDSPs(Advertisement advertisement) {
        DefaultTableModel dtm = (DefaultTableModel) dspsJTable.getModel();
        dtm.setRowCount(0);

        for (DSP dsp : adEnterprise.getDspDirectory().getDspList()) {
            if(dsp.getAdvertisement()==advertisement)
            {
                Object row[] = new Object[7];

                row[0] = dsp;
                row[1] = dsp.getAgeRange().getValue();
                row[2] = dsp.getOccupation().getValue();
                row[3] = dsp.getIncomeRange().getValue();
                row[4] = dsp.getGender().getValue();
                row[5] = dsp.getCostPerClick();
                row[6] = dsp.isEnabled() == Boolean.TRUE ? "Yes" : "No";

                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        adInventoryJTable = new javax.swing.JTable();
        viewAdJButton = new javax.swing.JButton();
        viewAdvertisementJJButton = new javax.swing.JButton();
        viewDSPsJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dspsJTable = new javax.swing.JTable();
        addDSPJButton = new javax.swing.JButton();
        editDSPJButton = new javax.swing.JButton();
        removeDSPJButton = new javax.swing.JButton();
        enableDisableDSPJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DSP Manager Work Area");

        adInventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ad ID", "Title", "Date Created", "Enabled?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(adInventoryJTable);

        viewAdJButton.setText("View Ad Detils");
        viewAdJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAdJButtonActionPerformed(evt);
            }
        });

        viewAdvertisementJJButton.setText("View Advertisement");
        viewAdvertisementJJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAdvertisementJJButtonActionPerformed(evt);
            }
        });

        viewDSPsJButton.setText("View DSP's");
        viewDSPsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDSPsJButtonActionPerformed(evt);
            }
        });

        dspsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "DSP ID", "Age Range", "Occupation", "Income Range", "Gender", "Cost Per Click", "Enabled?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(dspsJTable);

        addDSPJButton.setText("Add DSP");
        addDSPJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDSPJButtonActionPerformed(evt);
            }
        });

        editDSPJButton.setText("Edit DSP");
        editDSPJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDSPJButtonActionPerformed(evt);
            }
        });

        removeDSPJButton.setText("Remove DSP");
        removeDSPJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDSPJButtonActionPerformed(evt);
            }
        });

        enableDisableDSPJButton.setText("Enable/Disable DSP");
        enableDisableDSPJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableDisableDSPJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editDSPJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeDSPJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enableDisableDSPJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewDSPsJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addDSPJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewAdJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewAdvertisementJJButton)))
                .addContainerGap(343, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDSPsJButton)
                    .addComponent(viewAdJButton)
                    .addComponent(viewAdvertisementJJButton)
                    .addComponent(addDSPJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDSPJButton)
                    .addComponent(removeDSPJButton)
                    .addComponent(enableDisableDSPJButton))
                .addContainerGap(498, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewAdJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAdJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = adInventoryJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Advertisement.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Advertisement advertisement = (Advertisement) adInventoryJTable.getValueAt(selectedRow, 1);

        ViewEditAdDetailsJPanel vadjp = new ViewEditAdDetailsJPanel(userProcessContainer, advertisement);
        userProcessContainer.add("ViewAdvertisementDetailsJPanel", vadjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewAdJButtonActionPerformed

    private void viewAdvertisementJJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAdvertisementJJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = adInventoryJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Advertisement.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Advertisement advertisement = (Advertisement) adInventoryJTable.getValueAt(selectedRow, 1);
        
        ViewAdvertisementJPanel vijp = new ViewAdvertisementJPanel(userProcessContainer, advertisement);
        userProcessContainer.add("ViewImageJPanel", vijp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewAdvertisementJJButtonActionPerformed

    private void viewDSPsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDSPsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = adInventoryJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Advertisement.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Advertisement advertisement = (Advertisement) adInventoryJTable.getValueAt(selectedRow, 1);
        
        populateDSPs(advertisement);
    }//GEN-LAST:event_viewDSPsJButtonActionPerformed

    private void addDSPJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDSPJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = adInventoryJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Advertisement.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Advertisement advertisement = (Advertisement) adInventoryJTable.getValueAt(selectedRow, 1);

        AddDSPJPanel adspjp = new AddDSPJPanel(userProcessContainer,adEnterprise.getDspDirectory(), advertisement);
        userProcessContainer.add("AddDSPJPanel", adspjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addDSPJButtonActionPerformed

    private void editDSPJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDSPJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = dspsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a DSP.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        DSP dsp= (DSP) dspsJTable.getValueAt(selectedRow, 0);
        
        EditDSPJPanel edspjp = new EditDSPJPanel(userProcessContainer, dsp);
        userProcessContainer.add("EditDSPJPanel", edspjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_editDSPJButtonActionPerformed

    private void removeDSPJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDSPJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = dspsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a DSP.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        DSP dsp= (DSP) dspsJTable.getValueAt(selectedRow, 0);
        Advertisement advertisement= dsp.getAdvertisement();
        adEnterprise.getDspDirectory().removeDSP(dsp);
        System.out.println("DSP removed");
        JOptionPane.showMessageDialog(this, "DSP removed.", "Update", JOptionPane.INFORMATION_MESSAGE);
        populateDSPs(advertisement);
    }//GEN-LAST:event_removeDSPJButtonActionPerformed

    private void enableDisableDSPJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableDisableDSPJButtonActionPerformed
        // TODO add your handling code here:
        int flag;
        int selectedRow = dspsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a DSP.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        DSP dsp= (DSP) dspsJTable.getValueAt(selectedRow, 0);
        
        if(dsp.isEnabled()==true)
        {
            flag = JOptionPane.showConfirmDialog(this, "Are you sure want to disable this DSP?", "Warning", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                dsp.setEnabled(false);
                System.out.println("DSP disabled");
            }
        }else if(dsp.isEnabled()==false)
        {
            flag = JOptionPane.showConfirmDialog(this, "Are you sure want to enable this DSP?", "Warning", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                dsp.setEnabled(true);
                System.out.println("DSP enabled");
            }
        }
        populateDSPs(dsp.getAdvertisement());
    }//GEN-LAST:event_enableDisableDSPJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adInventoryJTable;
    private javax.swing.JButton addDSPJButton;
    private javax.swing.JTable dspsJTable;
    private javax.swing.JButton editDSPJButton;
    private javax.swing.JButton enableDisableDSPJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeDSPJButton;
    private javax.swing.JButton viewAdJButton;
    private javax.swing.JButton viewAdvertisementJJButton;
    private javax.swing.JButton viewDSPsJButton;
    // End of variables declaration//GEN-END:variables
}
