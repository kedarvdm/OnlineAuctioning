/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerAdminRole;

import Business.Customer.Customer;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonam
 */
public class ManageCustomers extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomers
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;

    public ManageCustomers(JPanel userProcessContainer, OrganizationDirectory organizationDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory=organizationDirectory;
        populateOrganizations();
    }
    
    private void populateOrganizations()
    {
        organizationJComboBox.removeAllItems();
        //Populate Customer Organization
        for(Organization o:organizationDirectory.getOrganizationList())
        {   
            if(o.getName().equals(Type.Customer.getValue()))
            {
                organizationJComboBox.addItem(o);
            }
        }
    }
    
    private void populateCustomerTable(Organization org)
    {
        DefaultTableModel dtm= (DefaultTableModel) customerJTable.getModel();
        dtm.setRowCount(0);
        for(Person person:org.getPersonDirectory().getPersonDirectory())
        {
            Object row[]= new Object[2];
            row[0]=(Customer)person;
            row[1]=((Customer)person).getCustomerID();

            dtm.addRow(row);
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addCustomerJButton = new javax.swing.JButton();
        removeCustomerJButton = new javax.swing.JButton();
        viewCustomerJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        customerJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        addCustomerJButton.setText("Add Customer");
        addCustomerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerJButtonActionPerformed(evt);
            }
        });

        removeCustomerJButton.setText("Remove");
        removeCustomerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCustomerJButtonActionPerformed(evt);
            }
        });

        viewCustomerJButton.setText("View Customer");
        viewCustomerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCustomerJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        customerJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Customer Name", "Customer ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(customerJTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Customers");

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Organization:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(refreshJButton)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backJButton)
                            .addGap(18, 18, 18)
                            .addComponent(removeCustomerJButton)
                            .addGap(18, 18, 18)
                            .addComponent(viewCustomerJButton)
                            .addGap(18, 18, 18)
                            .addComponent(addCustomerJButton))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(364, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(refreshJButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(removeCustomerJButton)
                    .addComponent(viewCustomerJButton)
                    .addComponent(addCustomerJButton))
                .addContainerGap(237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addCustomerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerJButtonActionPerformed
        // TODO add your handling code here:
        AddCustomer acjp= new AddCustomer(userProcessContainer,organizationDirectory);
        userProcessContainer.add("AddCustomerJPanel", acjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addCustomerJButtonActionPerformed

    private void removeCustomerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCustomerJButtonActionPerformed
        // TODO add your handling code here:
        Organization org= (Organization) organizationJComboBox.getSelectedItem();
        if(org==null)
        {
            JOptionPane.showMessageDialog(this,"Please select an Organization.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedRow= customerJTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(this,"Please select a Customer.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Customer customer=(Customer) customerJTable.getValueAt(selectedRow, 0);
        
        int flag= JOptionPane.showConfirmDialog(this, "Removing customer will delete the user account if present.Are you sure want to remove this customer?","Warning", JOptionPane.YES_NO_OPTION);
        if(flag==0)
        {
            UserAccountDirectory userAccountDirectory=org.getUserAccountDirectory();
             for (UserAccount ua : userAccountDirectory.getUserAccountList()) {
                 if (ua.getPerson().getPersonID()==customer.getPersonID()) {
                     userAccountDirectory.removeUserAccount(ua);
                     System.out.println("User Account removed");
                     break;
                 }
             }
           
            org.getPersonDirectory().removePerson(customer);
            System.out.println("Customer removed");
            populateCustomerTable(org);
        }        
    }//GEN-LAST:event_removeCustomerJButtonActionPerformed

    private void viewCustomerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCustomerJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow= customerJTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(this,"Please select a Customer.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Customer customer=(Customer) customerJTable.getValueAt(selectedRow, 0);
        ViewCustomerDetailsJPanel vcdjp= new ViewCustomerDetailsJPanel(userProcessContainer,customer);
        userProcessContainer.add("ViewCustomerDetailsJPanel", vcdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewCustomerJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
         Organization org= (Organization) organizationJComboBox.getSelectedItem();
        if(org==null)
        {
            JOptionPane.showMessageDialog(this,"Please select an Organization.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        populateCustomerTable(org);
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
        Organization org= (Organization) organizationJComboBox.getSelectedItem();
        if(org!=null)
        {
            populateCustomerTable(org);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomerJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable customerJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton removeCustomerJButton;
    private javax.swing.JButton viewCustomerJButton;
    // End of variables declaration//GEN-END:variables
}
