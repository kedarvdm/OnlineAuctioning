/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Publisher.AccountManagerRole;

import Business.Advertiser.Organizations.AdvertiserAccountManagerOrganization;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PublisherEnterprise;
import Business.Organization.Organization;
import Business.Publisher.WorkRequests.PostPaymentWorkRequest;
import Business.Publisher.WorkRequests.RequestPaymentWorkRequest;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonam
 */
public class ManagePostPaymentRequestsJPanel extends javax.swing.JPanel {

    /** Creates new form managePostPaymentRequestsJPanel */
    private JPanel userProcessContainer;
    private PublisherEnterprise publisherEnterprise;
    private Organization organization;
    private UserAccount userAccount;
    public ManagePostPaymentRequestsJPanel(JPanel userProcessContainer,PublisherEnterprise publisherEnterprise,Organization organization,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.publisherEnterprise=publisherEnterprise;
        this.organization=organization;
        this.userAccount=userAccount;
        populateOrgRequestsTable();
        populateMyRequestsTable();
    }

    private void populateOrgRequestsTable()
    {
        DefaultTableModel dtm= (DefaultTableModel) orgPostRequestsTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof PostPaymentWorkRequest) {
                Object row[] = new Object[7];

                row[0] = request;
                row[1] = request.getSender();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
                row[3] = ((PostPaymentWorkRequest)request).getDsp().getAdvertisement().getEnterprice().getName();
                row[4] = request.getStatus();
                row[5] = request.getRequestDate();
                row[6] = request.getResolveDate();
                dtm.addRow(row);
            }
        }
    }
    private void populateMyRequestsTable()
    {
        DefaultTableModel dtm= (DefaultTableModel) myPostRequestsTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof PostPaymentWorkRequest && request.getReceiver()==userAccount) {
                 Object row[] = new Object[7];

                row[0] = request;
                row[1] = request.getSender();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
                row[3] = ((PostPaymentWorkRequest)request).getDsp().getAdvertisement().getEnterprice().getName();
                row[4] = request.getStatus();
                row[5] = request.getRequestDate();
                row[6] = request.getResolveDate();
                dtm.addRow(row);
            }
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orgPostRequestsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        myPostRequestsTable = new javax.swing.JTable();
        assignToMeJButton = new javax.swing.JButton();
        postPaymentJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        refreshAllJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        backJButton1 = new javax.swing.JButton();

        orgPostRequestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Ad Enterprice", "Status", "Request Date", "Resolve Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orgPostRequestsTable);

        myPostRequestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Ad Enterprise", "Status", "Request Date", "Resolve Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(myPostRequestsTable);

        assignToMeJButton.setText("Assign To Me");
        assignToMeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeJButtonActionPerformed(evt);
            }
        });

        postPaymentJButton.setText("Post Payment");
        postPaymentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postPaymentJButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("My Requests:");

        refreshAllJButton.setText("Refresh All");
        refreshAllJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAllJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Organization Post Requests:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Manage Post Payment Requests");

        backJButton1.setText("<<Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(postPaymentJButton)
                    .addComponent(refreshAllJButton)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(assignToMeJButton)))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshAllJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignToMeJButton)
                    .addComponent(backJButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(postPaymentJButton)
                .addContainerGap(107, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignToMeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orgPostRequestsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Work Request.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        PostPaymentWorkRequest myWorkRequest = (PostPaymentWorkRequest) orgPostRequestsTable.getValueAt(selectedRow, 0);
        if(myWorkRequest.getReceiver()!=null)
        {
            JOptionPane.showMessageDialog(this, "Request is already assigned to "+myWorkRequest.getReceiver().getPerson().getName(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        myWorkRequest.setReceiver(userAccount);
        myWorkRequest.setStatus("Under Review");
        myWorkRequest.setResolveDate(new Date());
        System.out.println("Request assigned to "+userAccount.getUsername());
        populateOrgRequestsTable();
        populateMyRequestsTable();
    }//GEN-LAST:event_assignToMeJButtonActionPerformed

    private void postPaymentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postPaymentJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = myPostRequestsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Work Request.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        PostPaymentWorkRequest request = (PostPaymentWorkRequest) myPostRequestsTable.getValueAt(selectedRow, 0);
        //Request Payment to Advertiser logic
        Enterprise enterprise= request.getDsp().getAdvertisement().getEnterprice();
        Organization organization=null;
        for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof AdvertiserAccountManagerOrganization)
            {
                organization=org;
                break;
            }
        }
        
        RequestPaymentWorkRequest myWorkRequest= new RequestPaymentWorkRequest();
        myWorkRequest.setAdName(request.getDsp().getAdvertisement().getTitle());
        myWorkRequest.setAdSpace(request.getSsp().getAdSpace());
        myWorkRequest.setAmount(request.getDsp().getCostPerClick());
        myWorkRequest.setPaid(false);
        myWorkRequest.setMessage("Please pay "+String.valueOf(request.getDsp().getCostPerClick())+" for advertisement: "+request.getDsp().getAdvertisement().getTitle());
        myWorkRequest.setSender(userAccount);
        myWorkRequest.setRequestDate(new Date());
        myWorkRequest.setStatus("Sent");
        
        if (organization!=null){
            organization.getWorkQueue().getWorkRequestList().add(myWorkRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(myWorkRequest);
        }
        System.out.println("Payment request created and assigned to Advertisers Account Manager organization");
        request.setResolveDate(new Date());
        request.setStatus("Completed");
        populateOrgRequestsTable();
        populateMyRequestsTable();
    }//GEN-LAST:event_postPaymentJButtonActionPerformed

    private void refreshAllJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAllJButtonActionPerformed
        // TODO add your handling code here:
        populateOrgRequestsTable();
        populateMyRequestsTable();
    }//GEN-LAST:event_refreshAllJButtonActionPerformed

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ((CardLayout) userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMeJButton;
    private javax.swing.JButton backJButton1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable myPostRequestsTable;
    private javax.swing.JTable orgPostRequestsTable;
    private javax.swing.JButton postPaymentJButton;
    private javax.swing.JButton refreshAllJButton;
    // End of variables declaration//GEN-END:variables

}
