/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Supplier.ProductManagerRole;

import Business.Enterprise.SupplierEnterprise;
import Business.Product.Product;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/*JFreeChart*/
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JOptionPane;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Sonam
 */
public class ViewSupplierPerformanceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewSupplierPerformanceJPanel
     */
    private JPanel userProcessContainer;
    private SupplierEnterprise supplierEnterprise;
    public ViewSupplierPerformanceJPanel(JPanel userProcessContainer,SupplierEnterprise supplierEnterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.supplierEnterprise=supplierEnterprise;
        supplierNameLabel.setText(supplierEnterprise.getName()+": Performance Review");
        populatePerformanceTable();
    }

    private void populatePerformanceTable()
    {
        DefaultTableModel dtm= (DefaultTableModel) productPerformanceJTable.getModel();
        dtm.setRowCount(0);
        String mostSold="";
        String mostRevenue="";
        int currentSold=0;
        int previousSold=0;
        int currentRevenue=0;
        int previousRevenue=0;
        for(Product p: supplierEnterprise.getProductCatalog().getProductCatalog())
        {
            currentSold= p.getSoldCount();
            currentRevenue=p.getPrice()*p.getSoldCount();
            Object row[]=new Object[4];
            row[0]=p;
            row[1]=currentSold;
            row[2]=currentRevenue;
            row[3]=p.getAvailibility();
            dtm.addRow(row);
            
            if(currentSold>previousSold || (currentSold==previousSold && currentRevenue>previousRevenue))
            {
                mostSold=p.getProdName();
                previousSold=currentSold;
            }
            if(currentRevenue>previousRevenue)
            {
                mostRevenue=p.getProdName();
                previousRevenue=currentRevenue;
            }
        }
        mostSoldProductJLabel.setText(mostSold);
        mostRevenueProductJLabel.setText(mostRevenue);
        createCharts();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        supplierNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productPerformanceJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        mostSoldProductJLabel = new javax.swing.JLabel();
        mostRevenueProductJLabel = new javax.swing.JLabel();
        productSoldGraphJPanel = new javax.swing.JPanel();
        productRevenueGraphJPanel = new javax.swing.JPanel();
        viewProductDetailsJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        supplierNameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        supplierNameLabel.setText("Supplier Name");

        productPerformanceJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Items Sold", "Revenue", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productPerformanceJTable);

        jLabel1.setText("Top Selling Product");

        jLabel3.setText("Top Revenue Product");

        mostSoldProductJLabel.setText(" ");

        productSoldGraphJPanel.setMinimumSize(new java.awt.Dimension(600, 400));
        productSoldGraphJPanel.setPreferredSize(new java.awt.Dimension(600, 400));
        productSoldGraphJPanel.setLayout(new java.awt.BorderLayout());

        productRevenueGraphJPanel.setMinimumSize(new java.awt.Dimension(600, 400));
        productRevenueGraphJPanel.setPreferredSize(new java.awt.Dimension(600, 400));
        productRevenueGraphJPanel.setLayout(new java.awt.BorderLayout());

        viewProductDetailsJButton.setText("View Product Details");
        viewProductDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProductDetailsJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supplierNameLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mostSoldProductJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mostRevenueProductJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productSoldGraphJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(productRevenueGraphJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(viewProductDetailsJButton)
                    .addComponent(backJButton))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(supplierNameLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewProductDetailsJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mostSoldProductJLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(mostRevenueProductJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productSoldGraphJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productRevenueGraphJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backJButton)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewProductDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProductDetailsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow= productPerformanceJTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(this,"Please select a product.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Product p=(Product) productPerformanceJTable.getValueAt(selectedRow, 0);
        ViewProductDetailJPanel vpdjp = new ViewProductDetailJPanel(userProcessContainer, p);
        userProcessContainer.add("ViewProductDetailJPanelSupplier", vpdjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewProductDetailsJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
    private void createCharts()
    {
        DefaultCategoryDataset productSoldDataset=new DefaultCategoryDataset();
        DefaultCategoryDataset productRevenueDataset=new DefaultCategoryDataset();
        
        /*Creating Dataset*/
        for(Product p:supplierEnterprise.getProductCatalog().getProductCatalog())
        {
            productSoldDataset.addValue(p.getSoldCount(), "Products Sold",String.valueOf(p.getModelNumber()));
            productRevenueDataset.addValue(p.getSoldCount()*p.getPrice(), "Product Revenue", String.valueOf(p.getModelNumber()));
        }
        
        /*Product performance by Sell*/
        JFreeChart productSoldChart= ChartFactory.createBarChart3D("Performance By Sell", "Product ID", "Sold Count By Product", productSoldDataset, PlotOrientation.VERTICAL, true, false, false);
        productSoldChart.setBackgroundPaint(Color.white);
        CategoryPlot productSoldChartPlot = productSoldChart.getCategoryPlot();
        productSoldChartPlot.setBackgroundPaint(Color.lightGray);    
        
        CategoryAxis productSoldDomainAxis = productSoldChartPlot.getDomainAxis();
        productSoldDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis productSoldRangeAxis = (NumberAxis) productSoldChartPlot.getRangeAxis();
        productSoldRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        
        ChartPanel productSoldChartPanel= new ChartPanel(productSoldChart);
        productSoldChartPanel.setPreferredSize(new Dimension(300,400));
        productSoldGraphJPanel.add(productSoldChartPanel);
        productSoldGraphJPanel.validate();
        productSoldGraphJPanel.setVisible(true);

        /*Product performance by Revenue*/
        JFreeChart productRevenueChart= ChartFactory.createBarChart3D("Performance By Revenue", "Product ID", "Revenue By Product", productRevenueDataset, PlotOrientation.VERTICAL, true, false, false);
        productRevenueChart.setBackgroundPaint(Color.white);
        CategoryPlot productRevenueChartPlot = productRevenueChart.getCategoryPlot();
        productSoldChartPlot.setBackgroundPaint(Color.lightGray);
        
        CategoryAxis productRevenueDomainAxis = productRevenueChartPlot.getDomainAxis();
        productRevenueDomainAxis.setCategoryLabelPositions(
            CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
        );
        
        NumberAxis productRevenueRangeAxis = (NumberAxis) productRevenueChartPlot.getRangeAxis();
        productRevenueRangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());     
        
        ChartPanel productRevenueChartPanel= new ChartPanel(productRevenueChart);
        productRevenueChartPanel.setPreferredSize(new Dimension(300,400));
        productRevenueGraphJPanel.add(productRevenueChartPanel);
        productRevenueGraphJPanel.validate();
        productRevenueGraphJPanel.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mostRevenueProductJLabel;
    private javax.swing.JLabel mostSoldProductJLabel;
    private javax.swing.JTable productPerformanceJTable;
    private javax.swing.JPanel productRevenueGraphJPanel;
    private javax.swing.JPanel productSoldGraphJPanel;
    private javax.swing.JLabel supplierNameLabel;
    private javax.swing.JButton viewProductDetailsJButton;
    // End of variables declaration//GEN-END:variables
}
