/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole;

import Business.AdExchange.Roles.AdvertiserRole;
import Business.AdExchange.Roles.CustomerAdminRole;
import Business.AdExchange.Roles.PublisherRole;
import Business.AdExchange.Roles.SupplierRole;
import Business.Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.Utils.MyPasswordVerifier;
import Business.Utils.MyStringVerifier;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonam
 */
public class ManageEnterpriseAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;

    public ManageEnterpriseAdminWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        setVerifiers();
        populateEnterpriseTable();
        populateNetworkCombobox();
    }

    private void setVerifiers()
    {
        MyStringVerifier myStringVerifier= new MyStringVerifier();
        userNameJTextField.setInputVerifier(myStringVerifier);
        nameJTextField.setInputVerifier(myStringVerifier);
        MyPasswordVerifier myPasswordVerifier= new MyPasswordVerifier();
        passwordJTextField.setInputVerifier(myPasswordVerifier);
    }
    private void populateEnterpriseTable() {
        DefaultTableModel dtm = (DefaultTableModel) enterpriseJTable.getModel();
        dtm.setRowCount(0);

        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object row[] = new Object[3];

                    row[0] = enterprise;
                    row[1] = network.getName();
                    row[2] = userAccount;

                    dtm.addRow(row);
                }
            }
        }
    }

    private void populateNetworkCombobox() {
        networkJComboBox.removeAllItems();

        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseCombobox(Network network) {
        enterpriseJComboBox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseJComboBox.addItem(enterprise);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        enterpriseJComboBox = new javax.swing.JComboBox();
        userNameJTextField = new javax.swing.JTextField();
        passwordJTextField = new javax.swing.JTextField();
        nameJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        removeUserJButton = new javax.swing.JButton();

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        jLabel1.setText("Network");

        jLabel2.setText("Enterprise");

        jLabel3.setText("Username");

        jLabel4.setText("Password");

        jLabel5.setText("Name:");

        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });

        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Manage Enterprise Admins");

        removeUserJButton.setText("Remove User");
        removeUserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(backJButton))
                            .addGap(78, 78, 78)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(submitJButton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(networkJComboBox, 0, 150, Short.MAX_VALUE)
                                    .addComponent(enterpriseJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(userNameJTextField)
                                    .addComponent(passwordJTextField)
                                    .addComponent(nameJTextField))))
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(removeUserJButton))
                .addContainerGap(329, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeUserJButton)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton))
                .addContainerGap(151, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
        // TODO add your handling code here:
        Network network = (Network) networkJComboBox.getSelectedItem();

        if (network != null) {
            populateEnterpriseCombobox(network);
        }
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise= (Enterprise) enterpriseJComboBox.getSelectedItem();
        String userName= userNameJTextField.getText();
        String name= nameJTextField.getText();
        String password= passwordJTextField.getText();
        Person person=null;
        Role role=null;
        
        if(!validateFields())
        {
            JOptionPane.showMessageDialog(this,"Please enter correct fields","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Check if user already present in whole system.
        System.out.println("Scanning system user accounts for duplicate User Name");
        Boolean flag=true;
        if(system.checkIfUserNameisUnique(userName))
        {
            for(Network n: system.getNetworkList())
            {
                for(Enterprise e:n.getEnterpriseDirectory().getEnterpriseList())
                {
                    if(e.getUserAccountDirectory().checkIfUserNameUnique(userName))
                    {
                        for(Organization o:e.getOrganizationDirectory().getOrganizationList())
                        {
                            if(o.getUserAccountDirectory().checkIfUserNameUnique(userName))
                            {
                                flag=true;
                            }
                            else
                            {
                                flag=false;
                                break;
                            }
                        }
                        
                    }
                    else
                    {
                        flag=false;
                        break;
                    }
                }
            }
        }
        else
        {
            flag= false;
        }
        
        if(flag==false)
        {
            System.out.println("Duplicate User found.");
            JOptionPane.showMessageDialog(this,"Username already exists, please enter another name.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(enterprise.getEnterpriseType()==Enterprise.EnterpriseType.Advertiser)
        {
            person= enterprise.getPersonDirectory().createAndAddAdvertiser();
            role= new AdvertiserRole();
        }else if(enterprise.getEnterpriseType()==Enterprise.EnterpriseType.Publisher)
        {
            person= enterprise.getPersonDirectory().createAndAddAdvertiser();
            role= new PublisherRole();
        }else if(enterprise.getEnterpriseType()==Enterprise.EnterpriseType.Customer)
        {
            person= enterprise.getPersonDirectory().createAndAddEmployee();
            role= new CustomerAdminRole();
        }else if(enterprise.getEnterpriseType()==Enterprise.EnterpriseType.Supplier)
        {
            person= enterprise.getPersonDirectory().createAndAddEmployee();
            role= new SupplierRole();
        }
        
        
        person.setName(name);
        UserAccount ua=enterprise.getUserAccountDirectory().createUserAccount(userName, password,person,role);
        System.out.println("Enterprise Admin created");
        JOptionPane.showMessageDialog(this,"Enterprise Admin created","Update",JOptionPane.INFORMATION_MESSAGE);
        userNameJTextField.setText("");
        passwordJTextField.setText("");
        nameJTextField.setText("");
        populateEnterpriseTable();
    }//GEN-LAST:event_submitJButtonActionPerformed

    private Boolean validateFields()
    {
        if(networkJComboBox.getSelectedIndex()==-1
            || enterpriseJComboBox.getSelectedIndex()==-1
            || userNameJTextField.getText().length()==0
            || passwordJTextField.getText().length()==0
            || nameJTextField.getText().length()==0)
        {
            return false;
        }
        return true;
    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeUserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = enterpriseJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an User", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        UserAccount ua = (UserAccount) enterpriseJTable.getValueAt(selectedRow,2);
        Enterprise e=(Enterprise) enterpriseJTable.getValueAt(selectedRow, 0);
        
        int flag = JOptionPane.showConfirmDialog(this, "Are you sure want to remove this user?", "Warning", JOptionPane.YES_NO_OPTION);
        if (flag == 0) {
            e.getUserAccountDirectory().removeUserAccount(ua);
            System.out.println("User account removed");
            JOptionPane.showMessageDialog(this, "User account removed", "Update", JOptionPane.INFORMATION_MESSAGE);
        }
        populateEnterpriseTable();
    }//GEN-LAST:event_removeUserJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JButton removeUserJButton;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables
}
