/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import Business.Customer.Customer;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Supplier.MasterOrderCatalog;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonam
 */
public class ViewCustomerOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewCustomerOrdersJPanel
     */
    private JPanel userProcessContainer;
    private MasterOrderCatalog masterOrderCatalog;
    private Customer customer;
    private int customerID;
    public ViewCustomerOrdersJPanel(JPanel userProcessContainer,MasterOrderCatalog masterOrderCatalog,Customer customer) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.masterOrderCatalog=masterOrderCatalog;
        this.customer=customer;
        this.customerID=this.customer.getCustomerID();
        populateOrders();
        System.out.println("Orders populated");
        //Clearing orderDetailsJTable on load
        DefaultTableModel dtm=(DefaultTableModel) orderDetailsJTable.getModel();
        dtm.setRowCount(0);
    }

    private void populateOrders()
    {
        DefaultTableModel dtm=(DefaultTableModel) ordersJTable.getModel();
        dtm.setRowCount(0);
        
        for(Order o:masterOrderCatalog.getOrderCatalog())
        {
            if(o.getCustomerID()==customerID)
            {
                Object row[]= new Object[5];
                row[0]=o;
                row[1]=o.getOrderDate();
                row[2]=o.getOrderTotal();
                row[3]=o.getStatus();
                row[4]=o.getStatusBy();
                dtm.addRow(row);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        viewOrderDetailsJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderDetailsJTable = new javax.swing.JTable();
        viewItemJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View My Order's");

        ordersJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order", "Date", "Total", "Status", "Status By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ordersJTable);

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewOrderDetailsJButton.setText("View Order Details");
        viewOrderDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderDetailsJButtonActionPerformed(evt);
            }
        });

        orderDetailsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item", "Price", "Quantity", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderDetailsJTable);

        viewItemJButton.setText("View Item");
        viewItemJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewItemJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backJButton)
                            .addGap(18, 18, 18)
                            .addComponent(viewOrderDetailsJButton))
                        .addComponent(jScrollPane2))
                    .addComponent(viewItemJButton))
                .addContainerGap(445, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(viewOrderDetailsJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewItemJButton)
                .addContainerGap(338, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewItemJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewItemJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderDetailsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an item from cart", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        OrderItem oi = (OrderItem) orderDetailsJTable.getValueAt(selectedRow, 0);
        ViewOrderItemDetailJPanel voijp = new ViewOrderItemDetailJPanel(userProcessContainer, oi);
        userProcessContainer.add("ViewOrderItemDetailJPanel", voijp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewItemJButtonActionPerformed

    private void viewOrderDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderDetailsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = ordersJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an item from cart", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Order o=(Order) ordersJTable.getValueAt(selectedRow, 0);
        
        DefaultTableModel dtm= (DefaultTableModel) orderDetailsJTable.getModel();
        dtm.setRowCount(0);
        for(OrderItem oi:o.getOrderItemList())
        {
            Object row[]=new Object[4];
            row[0]=oi;
            row[1]=oi.getProduct().getPrice();
            row[2]=oi.getQuantity();
            row[3]=oi.getSalesPrice();
            
            dtm.addRow(row);
        }
    }//GEN-LAST:event_viewOrderDetailsJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderDetailsJTable;
    private javax.swing.JTable ordersJTable;
    private javax.swing.JButton viewItemJButton;
    private javax.swing.JButton viewOrderDetailsJButton;
    // End of variables declaration//GEN-END:variables
}
